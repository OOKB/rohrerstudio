/********/

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
  /* type stuff */
  -moz-font-feature-settings: "kern";
  -webkit-font-feature-settings: "kern";
  -ms-font-feature-settings: "kern";
  -o-font-feature-settings: "kern";
  font-feature-settings: "kern";
  font-kerning: normal;
  text-rendering: optimizeLegibility;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}

/* Visibility Classes */
.show {
  display: block !important;
}
.hidden {
  display: none !important;
}
.invisible {
  visibility: hidden;
}

.visible-lg,
.hidden-sm {
  display: none;
  visibility: hidden;
}

.hide-text {
  text-indent: 200%;
  white-space: nowrap;
  overflow: hidden;
}

.show-text {
  text-indent: 0%;
  white-space: normal;
  overflow: visible;
}

/* floats and clears */
.left,
.floatleft,
.float-left,
.leftfloat,
.left-float {
  float: left;
}

.right,
.floatright,
.float-right,
.rightfloat,
.right-float {
  float: right;
}

.clear,
.clearboth,
.clear-both,
.both-clear,
.bothclear {
  clear: both;
}
.clearleft,
.leftclear,
.clear-left,
.left-clear {
  clear: left;
}
.clearright,
.rightclear,
.clear-right,
.right-clear {
  clear: right;
}

.add-clearfix,
.clearfix::after,
.clear-fix::after,
.cf::after,
.group::after {
  content: '';
  display: table;
  clear: both;
}

/*
  center, left and right align text.
  it is my personal opinion that you should never use "text-align: justify;" on the web.
  browsers aren't good enough at typesetting justified text.
  I have not created those styles for that reason.
*/
.text-center,
.textcenter,
.center-text,
.centertext,
.align-center,
.center-align,
.aligncenter,
.centeralign {
  text-align: center;
}

.text-right,
.right-text,
.textright,
.righttext,
.align-right,
.right-align,
.alignright,
.rightalign {
  text-align: right;
}

.text-left,
.left-text,
.textleft,
.lefttext,
.align-left,
.left-align,
.alignleft,
.leftalign {
  text-align: left;
}

/* columnar stuff */
#wrapper,
.wrapper,
.container {
  margin: 0 auto;
  padding: 0 1rem 2rem 1rem;
  width: 100%;
}

.group,
.grouped,
.row {
  margin: 0 0 2rem 0;
}

.column,
.columns {
  margin: 0 0 2rem 0;
  padding: 0;
}

.mw100 { max-width: 100%; }

/* Start of the Grid
===========================================*/
/*
  widths are set using CSS calc() function
  width: calc(100% / x * y);
  where x = #of columns total, and y = #of columns the class crosses.
  by default this is a 12 column grid, so x = 12
*/
.one,
.two,
.three,
.four,
.five,
.six,
.halfwidth,
.seven,
.eight,
.nine,
.ten,
.eleven,
.twelve,
.fullwidth    { width: calc(100% / 12 * 12); }
/*everything goes full width on skinny viewports */

@media (min-width: 30rem) {
  #wrapper,
  .wrapper,
  .container {
    margin: 0 auto;
    padding-bottom: 2rem;
    min-width: 30rem;
    width: 80%;
  }
}

@media (min-width: 50rem) {
  #wrapper,
  .wrapper,
  .container {
    margin: 0 auto;
    padding-bottom: 2rem;
    max-width: 75rem;
  }

  .group,
  .grouped,
  .row {
    margin: 0 -1rem 2rem -1rem;
  }

  /* columnar stuff */
  .column,
  .columns {
    float: left;
    margin: 0 0 2rem 0;
    padding: 0 1rem;
  }

  /* the Grid
  ===========================================*/
  /*
    widths are set using CSS calc() function
    width: calc(100% / x * y);
    where x = #of columns total, and y = #of columns the class crosses.
    by default this has been set as a 12 column grid, so x = 12.
    y matches numerically the class number.
  */
  .one                   { width: calc(100% / 12 * 01); }
  .two                   { width: calc(100% / 12 * 02); }
  .three                 { width: calc(100% / 12 * 03); }
  .four                  { width: calc(100% / 12 * 04); }
  .five                  { width: calc(100% / 12 * 05); }
  .six, .halfwidth       { width: calc(100% / 12 * 06); }
  .seven                 { width: calc(100% / 12 * 07); }
  .eight                 { width: calc(100% / 12 * 08); }
  .nine                  { width: calc(100% / 12 * 09); }
  .ten                   { width: calc(100% / 12 * 10); }
  .eleven                { width: calc(100% / 12 * 11); }
  .twelve, .fullwidth    { width: calc(100% / 12 * 12); }
  /*
    you can easily add more columns (or remove columnes) by
    changing 12 to the number of total columns you want, and then
    add additional classes for the extra columns...
    like if you want 16 column base grid, you'd get something like
    width: calc(100% / x * y);
    x would be 16
    width: calc(100% / 16 * #columnsSpanned);
    make sense?
  */

  /* some standard offsets */
  .offset-by-one         { margin-left: calc(100% / 12 * 01); }
  .offset-by-two         { margin-left: calc(100% / 12 * 02); }
  .offset-by-three       { margin-left: calc(100% / 12 * 03); }
  .offset-by-four        { margin-left: calc(100% / 12 * 04); }
  .offset-by-five        { margin-left: calc(100% / 12 * 05); }
  .offset-by-six,
  .offset-by-half        { margin-left: calc(100% / 12 * 06); }
  .offset-by-seven       { margin-left: calc(100% / 12 * 07); }
  .offset-by-eight       { margin-left: calc(100% / 12 * 08); }
  .offset-by-nine        { margin-left: calc(100% / 12 * 09); }
  .offset-by-ten         { margin-left: calc(100% / 12 * 10); }
  .offset-by-eleven      { margin-left: calc(100% / 12 * 11); }
  .offset-by-twelve      { margin-left: calc(100% / 12 * 12); }

  .visible-lg {
    display: block;
    visibility: visible;
  }
  .visible-sm,
  .hidden-lg {
    display: none;
    visibility: hidden;
  }
}

.mt2  { margin-top:   2em; }

.ml0  { margin-left:  0;   }
.mln1 { margin-left: -1em; }

.pl1  { padding-left: 1em; }

ul.styleless {
  list-style: none;
  margin: 0;
  padding: 0;
}
/* Base type and layout Styles
–––––––––––––––––––––––––––––––––––––––––––––––––– */
body {
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
  text-rendering: optimizeLegibility;
}

.lead {
  font-size: 1.25em;
  font-weight: 300;
  line-height: normal;
}

small,
.small {
  font-size: .9rem;
}
